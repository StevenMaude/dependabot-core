# Runs all ecosystems cached and concurrently.
name: Smoke

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    paths-ignore:
      - docs/**
      - README.md
env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  e2e:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        suite:
          - actions
          - bundler
          - cargo
          - composer
          - docker
          - elm
          - go
          - gradle
          - hex
          - maven
          - npm
          - npm-remove-transitive
          - nuget
          - pip
          - pip-compile
          - pipenv
          - poetry
          - pub
          - submodules
          - terraform
          - yarn-berry
    steps:
    - uses: actions/checkout@v3
    - uses: dorny/paths-filter@v2
      if: github.event_name != 'workflow_dispatch'
      id: changes
      with:
        filters: |
          actions:
            - Dockerfile
            - Dockerfile.updater
            - 'common/**'
            - 'updater/**'
            - 'github_actions/**'
          bundler:
            - Dockerfile
            - Dockerfile.updater
            - 'common/**'
            - 'updater/**'
            - 'bundler/**'
          cargo:
            - Dockerfile
            - Dockerfile.updater
            - 'common/**'
            - 'updater/**'
            - 'cargo/**'
          composer:
            - Dockerfile
            - Dockerfile.updater
            - 'common/**'
            - 'updater/**'
            - 'composer/**'
          docker:
            - Dockerfile
            - Dockerfile.updater
            - 'common/**'
            - 'updater/**'
            - 'docker/**'
          elm:
            - Dockerfile
            - Dockerfile.updater
            - 'common/**'
            - 'updater/**'
            - 'elm/**'
          go:
            - Dockerfile
            - Dockerfile.updater
            - 'common/**'
            - 'updater/**'
            - 'go_modules/**'
          gradle:
            - Dockerfile
            - Dockerfile.updater
            - 'common/**'
            - 'updater/**'
            - 'maven/**'
            - 'gradle/**'
          hex:
            - Dockerfile
            - Dockerfile.updater
            - 'common/**'
            - 'updater/**'
            - 'hex/**'
          maven:
            - Dockerfile
            - Dockerfile.updater
            - 'common/**'
            - 'updater/**'
            - 'maven/**'
          npm:
            - Dockerfile
            - Dockerfile.updater
            - 'common/**'
            - 'updater/**'
            - 'npm_and_yarn/**'
          'npm-remove-transitive':
            - Dockerfile
            - Dockerfile.updater
            - 'common/**'
            - 'updater/**'
            - 'npm_and_yarn/**'
          nuget:
            - Dockerfile
            - Dockerfile.updater
            - 'common/**'
            - 'updater/**'
            - 'nuget/**'
          pub:
            - Dockerfile
            - Dockerfile.updater
            - 'common/**'
            - 'updater/**'
            - 'pub/**'
          pip:
            - Dockerfile
            - Dockerfile.updater
            - 'common/**'
            - 'updater/**'
            - 'python/**'
          'pip-compile':
            - Dockerfile
            - Dockerfile.updater
            - 'common/**'
            - 'updater/**'
            - 'python/**'
          pipenv:
            - Dockerfile
            - Dockerfile.updater
            - 'common/**'
            - 'updater/**'
            - 'python/**'
          poetry:
            - Dockerfile
            - Dockerfile.updater
            - 'common/**'
            - 'updater/**'
            - 'python/**'
          submodules:
            - Dockerfile
            - Dockerfile.updater
            - 'common/**'
            - 'updater/**'
            - 'git_submodules/**'
          terraform:
            - Dockerfile
            - Dockerfile.updater
            - 'common/**'
            - 'updater/**'
            - 'terraform/**'
          'yarn-berry':
            - Dockerfile
            - Dockerfile.updater
            - 'common/**'
            - 'updater/**'
            - 'npm_and_yarn/**'

    - name: Download CLI
      uses: actions/checkout@v3
      with:
        repository: dependabot/cli
        branch: deivid-rodriguez/allow-configuring-job-path-and-friends
        path: cli
      if: steps.changes.outputs[matrix.suite] == 'true'
    - name: Build CLI
      run: |
        go build -v ./...
        go run cmd/dependabot/dependabot.go -v
      working-directory: cli
      if: steps.changes.outputs[matrix.suite] == 'true'
    - name: Download tests
      run: |
        URL=https://api.github.com/repos/dependabot/smoke-tests/contents/tests/smoke-${{ matrix.suite }}.yaml
        curl $(gh api $URL --jq .download_url) -o smoke.yaml
      if: steps.changes.outputs[matrix.suite] == 'true'
      working-directory: cli

    # Download the Proxy cache. The job is ideally 100% cached so no real calls are made.
    - name: Download cache
      if: steps.changes.outputs[matrix.suite] == 'true'
      run: |
        mkdir cache
        cd cache
        gh run download --repo dependabot/smoke-tests --name cache-${{ matrix.suite }}

    - name: Build dependabot-core image
      if: steps.changes.outputs[matrix.suite] == 'true'
      env:
        DOCKER_BUILDKIT: 1
      run: |
        docker build \
          -t "dependabot/dependabot-core:latest" \
          --build-arg BUILDKIT_INLINE_CACHE=1 \
          --cache-from ghcr.io/dependabot/dependabot-core \
          .
    - name: Build dependabot-updater image
      if: steps.changes.outputs[matrix.suite] == 'true'
      env:
        DOCKER_BUILDKIT: 1
        OMNIBUS_VERSION: latest
      run: |
        docker build \
          -t "dependabot/updater:latest" \
          --build-arg BUILDKIT_INLINE_CACHE=1 \
          --cache-from ghcr.io/dependabot/dependabot-core \
          --cache-from ghcr.io/dependabot/dependabot-updater/dependabot-updater \
          --build-arg OMNIBUS_VERSION=$OMNIBUS_VERSION \
          -f Dockerfile.updater \
          .

    - name: ${{ matrix.suite }}
      if: steps.changes.outputs[matrix.suite] == 'true'
      env:
        LOCAL_GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DEPENDABOT_JOB_PATH: /home/dependabot/dependabot-core/updater/job.json
        DEPENDABOT_OUTPUT_PATH: /home/dependabot/dependabot-core/updater/output.json
        DEPENDABOT_REPO_CONTENTS_PATH: /home/dependabot/dependabot-core/updater/repo
      run: |
        set -o pipefail
        go run cmd/dependabot/dependabot.go test -f=smoke.yaml -o=result.yaml --cache=cache --timeout=20m --updater-image=dependabot/updater:latest 2>&1 | tee -a log.txt
      working-directory: cli

    - name: Diff
      if: always()
      continue-on-error: true
      run: diff --ignore-space-change smoke.yaml result.yaml && echo "Contents are identical"
      working-directory: cli

    - name: Create summary
      if: steps.changes.outputs[matrix.suite] == 'true'
      run: tail -n100 log.txt | grep -P '\d+/\d+ calls cached \(\d+%\)' >> $GITHUB_STEP_SUMMARY
      working-directory: cli

    # No upload at the end:
    # - If a test is uncachable in some regard, the cache would grow unbound.
    # - We might want to consider erroring if the cache is changed.
